{
  // Place your Fhi.Designsystem workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "ts-file for new component": {
    "scope": "typescript",
    "prefix": "new component file",
    "body": [
      "import { html, css, LitElement } from 'lit';",
      "import { customElement } from 'lit/decorators.js';",
      "",
      "export const ComponentNameSelector = 'component-name';",
      "",
      "@customElement(ComponentNameSelector)",
      "export class ComponentName extends LitElement {",
      "   render() {",
      "       return html``;",
      "   }",
      "",
      "   static styles = css``;",
      "}",
    ],
    "description": "template for new lit component",
  },
  "Testfile for new component": {
    "scope": "typescript",
    "prefix": "new test file",
    "body": [
      "import { fixture, expect } from '@open-wc/testing';",
      "import { html } from 'lit/static-html.js';",
      "import { ComponentName } from './component-name';",
      "",
      "describe('component-name', () => {",
      "  new ComponentName();",
      "  let component: ComponentName;",
      "  describe('accessibility', () => {",
      "    it('is accessible', async () => {",
      "      await expect(component).to.be.accessible();",
      "    });",
      "  })",
      "})",
    ],
    "description": "template for test file for new lit component",
  },
  "Storybook for new component": {
    "scope": "typescript",
    "prefix": "new stories file",
    "body": [
      "import type { Meta, StoryObj } from '@storybook/web-components';",
      "import { html } from 'lit';",
      "import { ComponentName } from './component-name';",
      "",
      "new ComponentName();",
      "",
      "const meta: Meta<ComponentName> = {",
      "  title: '',",
      "  component: 'component-name',",
      "  parameters: {},",
      "  decorators: [],",
      "  render: args => html`<component-name></component-name>`,",
      "  argTypes: {},",
      "};",
      "",
      "type Story = StoryObj<ComponentName>;",
      "",
      "export const Preview: Story = {",
      "  tags: [],",
      "  args: {},",
      "  render: () => html``,",
      "};",
      "",
      "export default meta;",
    ],
    "description": "template for stories file for new lit component",
  },
}
